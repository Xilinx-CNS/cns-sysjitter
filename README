sysjitter v1.1

Copyright 2010 David Riddoch <david@riddoch.org.uk>

sysjitter measures the extent to which the system impacts on user-level
code by causing jitter.  It runs a thread on each processor core, and when
the thread is "knocked off" the core it measures how long for.  At the end
of the run it outputs some summary statistics for each core, and optionally
the full raw data.


Prerequisites
-------------

- Supports x86 and x86_64 processors.

- Requires a version of gcc with support for built-in atomics.


Building
--------

  make


Running
-------

  It is important to run sysjitter on a system that is idle.  If running on
  a system with cpusets enabled, then run sysjitter as root.

    sysjitter <threshold-nsec>

  The argument <threshold-nsec> tells sysjitter to ignore any
  "interruptions" shorter than the value given.  Something in the region of
  a few hundred nanoseconds is a reasonable choice here.

  By default it will run for 70 seconds.  Override with the --runtime
  option.  e.g. For a 10 second run:

    sysjitter --runtime 10 300

  The default output gives summary statistics for each CPU core.  Pipe the
  output through "column -t" to make it a little easier on the eye.

  You can get the raw data out with the --raw option.  This includes the
  timestamp and duration of each interruption on each CPU core.  The data
  is placed in a separate file for each CPU core.
